apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-slave
  namespace: default
spec:
  serviceName: "redis-slave"
  replicas: 3
  selector:
    matchLabels:
      app: redis
      role: slave
  template:
    metadata:
      labels:
        app: redis
        role: slave
    spec:
      containers:
      - name: redis
        image: redis:6.0
        ports:
        - containerPort: 6380
        command:
        - /bin/sh
        - -c
        - |
          case $(hostname) in
            *"redis-slave-0"*)
              redis-server --port 6380 --slaveof redis-master-0.redis-master.default.svc.cluster.local 6379 --masterauth 123456
              ;;
            *"redis-slave-1"*)
              redis-server --port 6380 --slaveof redis-master-1.redis-master.default.svc.cluster.local 6379 --masterauth 123456
              ;;
            *"redis-slave-2"*)
              redis-server --port 6380 --slaveof redis-master-2.redis-master.default.svc.cluster.local 6379 --masterauth 123456
              ;;
          esac
        volumeMounts:
        - name: redis-config
          mountPath: /redis-slave
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi